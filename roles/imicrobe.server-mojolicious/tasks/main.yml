---
- name: install Bower
  npm:
    name: bower
    global: yes

- name: Has the repository already been cloned?
  stat: path=/home/imicrobe/imicrobe/lib/mojo/.git
  register: imicrobe_mojo_dot_git

- name: clone the imicrobe-mojo repository
  git:
    repo: https://github.com/hurwitzlab/imicrobe-mojo.git
    dest: /home/imicrobe/imicrobe/lib/mojo
  become_user: imicrobe
  when: not imicrobe_mojo_dot_git.stat.exists

#- name: checkout the vm branch
#  command: git checkout vm
#  args:
#    chdir: /home/imicrobe/imicrobe/lib/mojo
#  become_user: imicrobe

- name: create imicrobe/lib/mojo/log
  file:
    path: /home/imicrobe/imicrobe/lib/mojo/log
    state: directory
  become_user: imicrobe

- name: install packages from bower.json
  command: bower install
  args:
    chdir: /home/imicrobe/imicrobe/lib/mojo
  become_user: imicrobe

# try --notest rather than --force to reduce installation time
# --force was used to install a module if the tests failed
- name: install dependencies
  command: "/usr/local/bin/cpanm {{ item }} --notest"
  with_items:
    - Archive::Tar
    - autodie
    - Captcha::reCAPTCHA
    - Data::Dump
    - Data::GUID
    - Date::Parse
    - DateTime
    - DBD::mysql
    - DBI
    - DBIx::Class
    - Email::Valid
    - HTML::LinkExtractor
    - IO::Zlib
    - JSON::XS
    - List::MoreUtils
    - LWP::UserAgent
    - Mail::Sendmail
    - NetAddr::IP
    - Net::DNS
    - Mail::SpamAssassin
    - Mojolicious
    - Mojolicious::Plugin::JSONConfig
    - Mojolicious::Plugin::TtRenderer
    - MongoDB
    - Moose
    - Moose::Util::TypeConstraints
    - MooseX::MarkAsMethods
    - MooseX::NonMoose
    - namespace::autoclean
    - Readonly
    - String::Trim
    - Template
    - Template::Plugin::Comma
    - Text::RecordParser
    - YAML

- name: copy Captcha configuration file to imicrobe/lib/mojo directory
  template:
    src: templates/imicrobe-captcha.yaml.j2
    dest: /home/imicrobe/imicrobe/lib/mojo/imicrobe-captcha.yaml
    mode: u+r
  become_user: imicrobe

- name: copy sample-imicrobe.json to imicrobe.json
  command: cp /home/imicrobe/imicrobe/lib/mojo/sample-imicrobe.json /home/imicrobe/imicrobe/lib/mojo/imicrobe.json
  become_user: imicrobe

- name: modify lib/mojo/imicrobe.json
  lineinfile:
    dest: /home/imicrobe/imicrobe/lib/mojo/imicrobe.json
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    #- { regexp: '"secret":',               line: '    "secret": "{{ imicrobe_secret }}",'}
    - { regexp: '"password": "XXX"',       line: '        "password": "{{ imicrobe_mysql_pw }}",'}
    - { regexp: '"captcha_conf":',         line: '        "captcha_conf": "/home/imicrobe/imicrobe/lib/mojo/imicrobe-captcha.yaml",'}
    - { regexp: '"gmap_api_key":',         line: '    "gmap_api_key": "{{ imicrobe_gmap_api_key }}",' }
    - { regexp: '"google_analytics_key":', line: '    "google_analytics_key": "{{ imicrobe_google_analytics_key }}",' }
    - { regexp: '"public":',               line: '        "public": "{{ imicrobe_tacc_public }}",' }
    - { regexp: '"private":',              line: '        "private": "{{ imicrobe_tacc_private }}",' }
    - { regexp: '"redirect_url":',         line: '        "redirect_url": "{{ imicrobe_tacc_redirect_url }}"' }
    - { regexp: '"host":',                 line: '        "host": "{{ imicrobe_mongo_host }}",' }
  become_user: imicrobe

- name: copy mojolicious startup script to the imicrobe home directory
  copy:
    src: files/start_imicrobe_mojo.sh
    dest: /home/imicrobe/
    mode: u+x
  become_user: imicrobe

- name: copy mojolicious stop script to the imicrobe home directory
  copy:
    src: files/stop_imicrobe_mojo.sh
    dest: /home/imicrobe/
    mode: u+x
  become_user: imicrobe

- name: install imicrobe.service
  copy:
    src: files/imicrobe.service
    dest: /lib/systemd/system/

# does this work?? I often have to stop and start this service
- name: start the imicrobe service
  service:
    name: imicrobe
    state: started
    enabled: yes
